# ИСПРАВИТЬ: разве?
"""Программа запрашивает строку и расставляет в ней заглавные буквы"""


# ИСПРАВИТЬ: аннотацию типа возвращаемого значения
def isInteger(string: str) -> str:
    str_res = ''
    flag = True
    # ИСПРАВИТЬ: в условии сказано, что вы можете игнорировать ведущие и замыкающие, а не любые пробелы в строке (см. тест ниже) — для того, чтобы избавиться от пробелов по краям строки хорошим выбором является метод strip()
    for i in string:
        if i != ' ':
            str_res += i
    if str_res[0] not in '+-0123456789':
        flag = False
    else:
        # ИСПРАВИТЬ: и снова об упорно игнорируемых вами строковых методах — здесь стоит использовать строковый метод isdecimal()
        for i in str_res[1:]:
            if i not in '0123456789':
                flag = False
                break
    return flag


# КОММЕНТАРИЙ: хорошо, что вы понимаете, как можно совершить определённые действия без строковых методов — это полезно для общего развития; однако, учитывайте, что многие встроенные методы являются оптимизированными и зачастую выполняются быстрее или даже намного быстрее, чем явные циклы — так, в случае с удалением пробелов из вашей первой тестовой строки метод strip() в 3–4 раза быстрее явного цикла (проверьте сами)


if __name__ == "__main__":
    str_inp = input('Введите строку > ')
    if isInteger(str_inp):
        print('Введенную строку можно считать целым числом')
    else:
        print('Введенную строку нельзя считать целым числом')


# Введите строку >   -98568
# Введенную строку можно считать целым числом

# Введите строку >   -в458
# Введенную строку нельзя считать целым числом

# Введите строку > 12 34
# КОММЕНТАРИЙ: встроенная функция int() с вами не согласится
# Введенную строку можно считать целым числом


# ИТОГ: неплохо, но можно лучше — 2/3
